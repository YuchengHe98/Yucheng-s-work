<div class="container">
    <div id="pac-container" class="pac-card">
        <div class="pac-controls">
            <label for="pac-input">Location</label>
            <input id="pac-input" class="pac-controls" type="text" placeholder="Search Box">
        </div>
        <div id="map"></div>
        <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCeaaUgedTobd_fyuMWTB2PrbIy_nweZeY&libraries=places&callback=initAutocomplete"
                async defer>
        </script>
    </div>
</div>
<script>
    places = [{
        address: 'The University of Sheffield, 211 Portobello, Sheffield S1 4DP, United Kingdom',
        lat: 53.381,
        lng: -1.480,
    }];

    function updateLocation() {
        document.querySelector('#location').value = places[places.length - 1].address;
        document.querySelector('#lat').value = places[places.length - 1].lat;
        document.querySelector('#lng').value = places[places.length - 1].lng;
    }

    function initAutocomplete() {
        let myLatlng = new google.maps.LatLng(53.381, -1.480);
        let map = new google.maps.Map(document.getElementById('map'), {
            center: myLatlng,
            zoom: 13,
            mapTypeId: 'roadmap'
        });

        // Create the search box and link it to the UI element.
        let input = document.getElementById('pac-input');
        let searchBox = new google.maps.places.SearchBox(input);
        // map.controls[google.maps.ControlPosition.TOP_CENTER].push(input);

        // Bias the SearchBox results towards current map's viewport.
        map.addListener('bounds_changed', function () {
            searchBox.setBounds(map.getBounds());
        });

        let markers = [];
        // Listen for the event fired when the user selects a prediction and retrieve
        // more details for that place.
        searchBox.addListener('places_changed', function () {
            let _places = searchBox.getPlaces();

            if (_places.length == 0) {
                return;
            }
            let last = _places[_places.length - 1];
            places.push({
                address: last.formatted_address,
                lat: last.geometry.location.lat(),
                lng: last.geometry.location.lng(),
            });
            updateLocation();

            // Clear out the old markers.
            markers.forEach(function (marker) {
                marker.setMap(null);
            });
            markers = [];

            // For each place, get the icon, name and location.
            var bounds = new google.maps.LatLngBounds();
            _places.forEach(function (place) {
                if (!place.geometry) {
                    console.log('Returned place contains no geometry');
                    return;
                }
                var icon = {
                    url: place.icon,
                    size: new google.maps.Size(71, 71),
                    origin: new google.maps.Point(0, 0),
                    anchor: new google.maps.Point(17, 34),
                    scaledSize: new google.maps.Size(25, 25)
                };

                // Create a marker for each place.
                markers.push(new google.maps.Marker({
                    map: map,
                    icon: icon,
                    title: place.name,
                    position: place.geometry.location
                }));

                if (place.geometry.viewport) {
                    // Only geocodes have viewport.
                    bounds.union(place.geometry.viewport);
                } else {
                    bounds.extend(place.geometry.location);
                }
            });
            map.fitBounds(bounds);
        });

        let marker = new google.maps.Marker({
            position: myLatlng,
            map: map,
            title: 'Here!!'
        });
        let infoWindow = new google.maps.InfoWindow({
            content: 'I work at the Department of Computer Science, The University of Sheffield',
            maxWidth: 200
        });
        google.maps.event.addListener(marker, 'click', function () {
            console.log(map);
            console.log(marker);
            infoWindow.open(map, marker);
        });

        updateLocation();
    }
</script>
